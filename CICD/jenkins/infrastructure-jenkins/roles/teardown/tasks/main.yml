---

- name: 'Gather ec2 instance information'
  ec2_instance_info:
    filters:
      {tag-key: "{{key}}", tag-value: "{{value}}", "instance-state-name": running}
  register: ec2

- name: De-associate public ip
  ec2_eip:
    device_id: "{{ ec2.instances[0].instance_id }}"
    ip: "{{ elastic_ip }}"
    state: absent

- name: Terminate EC2 Instance(s)
  ec2:
    instance_ids: "{{ item.instance_id }}"
    state: absent
    wait: true
  with_items: "{{ ec2.instances }}"

- name: Register vpc 
  ec2_vpc_net_info:
      filters:
        "tag:Name": "{{ vpc_name }}"
  register: vpc

- name: 'Set VPC ID in variable'
  set_fact:
    vpc_id: "{{ vpc.vpcs[0].vpc_id }}"

- name: 'Remove subnets from Vpc'
  ec2_vpc_subnet:
    state: absent
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ vpc_id }}"
    cidr: "{{ item.value.cidr }}"
  with_dict: "{{ vpc_subnets }}"


- ec2_vpc_route_table_info:
    region: "{{ lookup('env','AWS_REGION') }}"
    filters:
      "tag:Name": "jenkins_route_table_{{ vpc_id }}"
  register: route


- name: "Delete security group by its Security group name"
  ec2_group:
    name: "jenkins_sg_{{ vpc_id }}"
    state: absent


- name : "Delete internet gateway"
  ec2_vpc_igw:
    vpc_id:  "{{ vpc_id }}"
    state: absent
  register: deligw

- name: "Delete VPC"
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr_block }}"
    state: absent
